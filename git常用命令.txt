git checkout -- ***（某些文件）
撤销工作区(不是暂存区)对一个或多个文件的改动

git checkout -b ***
复制并切换分支
单一的命令忘了，能通过--help或推理记忆想起来，复合性命令就麻烦了。
可以转换为 git branch *** 、git checkout *** 两条命令，这样对我而言，更合理一些。

git show commit-id --raw
显示指定快照的增加、删除、修改的概况

git log .
显示当前目录下有过的改动，知道某个功能必须在当前目录下改动时，可以用git log .
缩小了检索的范围，更快找到问题所在

?这是个疑问点
在子目录下git show *** 
和git show *** --raw竟然是不一样的

git commit 是个防御性操作
搞定一个功能，就可以提交。之后就可以通过git log查看某一个具体功能的代码。类似于代码大全里讲的功能内聚。
也可以把git log的代码拿出来总结一番。

git reset commit-id --hard
重置到某一个版本，未来的版本也可以
这个命令会清除工作区的修改，所以，需要很小心。

注意：先push到服务器上，然后再reset以前的版本，而不是reset到以前版本，再reset刚刚的版本来还原。

git合并，也碰到例外的情况，我用小狼毫更新了版本，抓取远程分支就会有问题，需要合并。
小狼毫版本更新相当于使它本地做了些更改，需要先提交再抓取。
git和本地文件夹的名字无关，需要的信息都在.git。

git比坚果云更好用，坚果云只是同步最新的，而git还能查看以前的快照

小贴士：
app上的应用数据、电脑上的应用数据，都可以用git来同步。


